// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mission_raw/mission_raw.proto

#include "mission_raw/mission_raw.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_mission_5fraw_2fmission_5fraw_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MissionItem_mission_5fraw_2fmission_5fraw_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mission_5fraw_2fmission_5fraw_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MissionProgress_mission_5fraw_2fmission_5fraw_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mission_5fraw_2fmission_5fraw_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto;
namespace mavsdk {
namespace rpc {
namespace mission_raw {
class UploadMissionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UploadMissionRequest> _instance;
} _UploadMissionRequest_default_instance_;
class UploadMissionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UploadMissionResponse> _instance;
} _UploadMissionResponse_default_instance_;
class CancelMissionUploadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelMissionUploadRequest> _instance;
} _CancelMissionUploadRequest_default_instance_;
class CancelMissionUploadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelMissionUploadResponse> _instance;
} _CancelMissionUploadResponse_default_instance_;
class DownloadMissionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DownloadMissionRequest> _instance;
} _DownloadMissionRequest_default_instance_;
class DownloadMissionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DownloadMissionResponse> _instance;
} _DownloadMissionResponse_default_instance_;
class CancelMissionDownloadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelMissionDownloadRequest> _instance;
} _CancelMissionDownloadRequest_default_instance_;
class CancelMissionDownloadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelMissionDownloadResponse> _instance;
} _CancelMissionDownloadResponse_default_instance_;
class StartMissionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartMissionRequest> _instance;
} _StartMissionRequest_default_instance_;
class StartMissionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartMissionResponse> _instance;
} _StartMissionResponse_default_instance_;
class PauseMissionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PauseMissionRequest> _instance;
} _PauseMissionRequest_default_instance_;
class PauseMissionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PauseMissionResponse> _instance;
} _PauseMissionResponse_default_instance_;
class ClearMissionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearMissionRequest> _instance;
} _ClearMissionRequest_default_instance_;
class ClearMissionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClearMissionResponse> _instance;
} _ClearMissionResponse_default_instance_;
class SetCurrentMissionItemRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetCurrentMissionItemRequest> _instance;
} _SetCurrentMissionItemRequest_default_instance_;
class SetCurrentMissionItemResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetCurrentMissionItemResponse> _instance;
} _SetCurrentMissionItemResponse_default_instance_;
class SubscribeMissionProgressRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeMissionProgressRequest> _instance;
} _SubscribeMissionProgressRequest_default_instance_;
class MissionProgressResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MissionProgressResponse> _instance;
} _MissionProgressResponse_default_instance_;
class SubscribeMissionChangedRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscribeMissionChangedRequest> _instance;
} _SubscribeMissionChangedRequest_default_instance_;
class MissionChangedResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MissionChangedResponse> _instance;
} _MissionChangedResponse_default_instance_;
class MissionProgressDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MissionProgress> _instance;
} _MissionProgress_default_instance_;
class MissionItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MissionItem> _instance;
} _MissionItem_default_instance_;
class MissionRawResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MissionRawResult> _instance;
} _MissionRawResult_default_instance_;
}  // namespace mission_raw
}  // namespace rpc
}  // namespace mavsdk
static void InitDefaultsscc_info_CancelMissionDownloadRequest_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_CancelMissionDownloadRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::CancelMissionDownloadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::CancelMissionDownloadRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelMissionDownloadRequest_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CancelMissionDownloadRequest_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_CancelMissionDownloadResponse_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_CancelMissionDownloadResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::CancelMissionDownloadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::CancelMissionDownloadResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CancelMissionDownloadResponse_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CancelMissionDownloadResponse_mission_5fraw_2fmission_5fraw_2eproto}, {
      &scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto.base,}};

static void InitDefaultsscc_info_CancelMissionUploadRequest_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_CancelMissionUploadRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::CancelMissionUploadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::CancelMissionUploadRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelMissionUploadRequest_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CancelMissionUploadRequest_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_CancelMissionUploadResponse_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_CancelMissionUploadResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::CancelMissionUploadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::CancelMissionUploadResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CancelMissionUploadResponse_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CancelMissionUploadResponse_mission_5fraw_2fmission_5fraw_2eproto}, {
      &scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto.base,}};

static void InitDefaultsscc_info_ClearMissionRequest_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_ClearMissionRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::ClearMissionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::ClearMissionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClearMissionRequest_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClearMissionRequest_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_ClearMissionResponse_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_ClearMissionResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::ClearMissionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::ClearMissionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClearMissionResponse_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ClearMissionResponse_mission_5fraw_2fmission_5fraw_2eproto}, {
      &scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto.base,}};

static void InitDefaultsscc_info_DownloadMissionRequest_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_DownloadMissionRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::DownloadMissionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::DownloadMissionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DownloadMissionRequest_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DownloadMissionRequest_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_DownloadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_DownloadMissionResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::DownloadMissionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::DownloadMissionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DownloadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DownloadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto}, {
      &scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto.base,
      &scc_info_MissionItem_mission_5fraw_2fmission_5fraw_2eproto.base,}};

static void InitDefaultsscc_info_MissionChangedResponse_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_MissionChangedResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::MissionChangedResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::MissionChangedResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MissionChangedResponse_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MissionChangedResponse_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_MissionItem_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_MissionItem_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::MissionItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::MissionItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MissionItem_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MissionItem_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_MissionProgress_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_MissionProgress_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::MissionProgress();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::MissionProgress::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MissionProgress_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MissionProgress_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_MissionProgressResponse_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_MissionProgressResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::MissionProgressResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::MissionProgressResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MissionProgressResponse_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MissionProgressResponse_mission_5fraw_2fmission_5fraw_2eproto}, {
      &scc_info_MissionProgress_mission_5fraw_2fmission_5fraw_2eproto.base,}};

static void InitDefaultsscc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_MissionRawResult_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::MissionRawResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::MissionRawResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_PauseMissionRequest_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_PauseMissionRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::PauseMissionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::PauseMissionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PauseMissionRequest_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PauseMissionRequest_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_PauseMissionResponse_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_PauseMissionResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::PauseMissionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::PauseMissionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PauseMissionResponse_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PauseMissionResponse_mission_5fraw_2fmission_5fraw_2eproto}, {
      &scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto.base,}};

static void InitDefaultsscc_info_SetCurrentMissionItemRequest_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_SetCurrentMissionItemRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::SetCurrentMissionItemRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::SetCurrentMissionItemRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetCurrentMissionItemRequest_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetCurrentMissionItemRequest_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_SetCurrentMissionItemResponse_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_SetCurrentMissionItemResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::SetCurrentMissionItemResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::SetCurrentMissionItemResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetCurrentMissionItemResponse_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetCurrentMissionItemResponse_mission_5fraw_2fmission_5fraw_2eproto}, {
      &scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto.base,}};

static void InitDefaultsscc_info_StartMissionRequest_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_StartMissionRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::StartMissionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::StartMissionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartMissionRequest_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartMissionRequest_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_StartMissionResponse_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_StartMissionResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::StartMissionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::StartMissionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StartMissionResponse_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StartMissionResponse_mission_5fraw_2fmission_5fraw_2eproto}, {
      &scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto.base,}};

static void InitDefaultsscc_info_SubscribeMissionChangedRequest_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_SubscribeMissionChangedRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::SubscribeMissionChangedRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::SubscribeMissionChangedRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubscribeMissionChangedRequest_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubscribeMissionChangedRequest_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_SubscribeMissionProgressRequest_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_SubscribeMissionProgressRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::SubscribeMissionProgressRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::SubscribeMissionProgressRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubscribeMissionProgressRequest_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubscribeMissionProgressRequest_mission_5fraw_2fmission_5fraw_2eproto}, {}};

static void InitDefaultsscc_info_UploadMissionRequest_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_UploadMissionRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::UploadMissionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::UploadMissionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UploadMissionRequest_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UploadMissionRequest_mission_5fraw_2fmission_5fraw_2eproto}, {
      &scc_info_MissionItem_mission_5fraw_2fmission_5fraw_2eproto.base,}};

static void InitDefaultsscc_info_UploadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::mission_raw::_UploadMissionResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::mission_raw::UploadMissionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::mission_raw::UploadMissionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UploadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UploadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto}, {
      &scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mission_5fraw_2fmission_5fraw_2eproto[23];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_mission_5fraw_2fmission_5fraw_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mission_5fraw_2fmission_5fraw_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mission_5fraw_2fmission_5fraw_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::UploadMissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::UploadMissionRequest, mission_items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::UploadMissionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::UploadMissionResponse, mission_raw_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::CancelMissionUploadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::CancelMissionUploadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::CancelMissionUploadResponse, mission_raw_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::DownloadMissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::DownloadMissionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::DownloadMissionResponse, mission_raw_result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::DownloadMissionResponse, mission_items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::CancelMissionDownloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::CancelMissionDownloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::CancelMissionDownloadResponse, mission_raw_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::StartMissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::StartMissionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::StartMissionResponse, mission_raw_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::PauseMissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::PauseMissionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::PauseMissionResponse, mission_raw_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::ClearMissionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::ClearMissionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::ClearMissionResponse, mission_raw_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::SetCurrentMissionItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::SetCurrentMissionItemRequest, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::SetCurrentMissionItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::SetCurrentMissionItemResponse, mission_raw_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::SubscribeMissionProgressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionProgressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionProgressResponse, mission_progress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::SubscribeMissionChangedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionChangedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionChangedResponse, mission_changed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionProgress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionProgress, current_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionProgress, total_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, seq_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, frame_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, command_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, current_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, autocontinue_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, param1_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, param2_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, param3_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, param4_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, x_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, y_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, z_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionItem, mission_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionRawResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionRawResult, result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::mission_raw::MissionRawResult, result_str_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mavsdk::rpc::mission_raw::UploadMissionRequest)},
  { 6, -1, sizeof(::mavsdk::rpc::mission_raw::UploadMissionResponse)},
  { 12, -1, sizeof(::mavsdk::rpc::mission_raw::CancelMissionUploadRequest)},
  { 17, -1, sizeof(::mavsdk::rpc::mission_raw::CancelMissionUploadResponse)},
  { 23, -1, sizeof(::mavsdk::rpc::mission_raw::DownloadMissionRequest)},
  { 28, -1, sizeof(::mavsdk::rpc::mission_raw::DownloadMissionResponse)},
  { 35, -1, sizeof(::mavsdk::rpc::mission_raw::CancelMissionDownloadRequest)},
  { 40, -1, sizeof(::mavsdk::rpc::mission_raw::CancelMissionDownloadResponse)},
  { 46, -1, sizeof(::mavsdk::rpc::mission_raw::StartMissionRequest)},
  { 51, -1, sizeof(::mavsdk::rpc::mission_raw::StartMissionResponse)},
  { 57, -1, sizeof(::mavsdk::rpc::mission_raw::PauseMissionRequest)},
  { 62, -1, sizeof(::mavsdk::rpc::mission_raw::PauseMissionResponse)},
  { 68, -1, sizeof(::mavsdk::rpc::mission_raw::ClearMissionRequest)},
  { 73, -1, sizeof(::mavsdk::rpc::mission_raw::ClearMissionResponse)},
  { 79, -1, sizeof(::mavsdk::rpc::mission_raw::SetCurrentMissionItemRequest)},
  { 85, -1, sizeof(::mavsdk::rpc::mission_raw::SetCurrentMissionItemResponse)},
  { 91, -1, sizeof(::mavsdk::rpc::mission_raw::SubscribeMissionProgressRequest)},
  { 96, -1, sizeof(::mavsdk::rpc::mission_raw::MissionProgressResponse)},
  { 102, -1, sizeof(::mavsdk::rpc::mission_raw::SubscribeMissionChangedRequest)},
  { 107, -1, sizeof(::mavsdk::rpc::mission_raw::MissionChangedResponse)},
  { 113, -1, sizeof(::mavsdk::rpc::mission_raw::MissionProgress)},
  { 120, -1, sizeof(::mavsdk::rpc::mission_raw::MissionItem)},
  { 138, -1, sizeof(::mavsdk::rpc::mission_raw::MissionRawResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_UploadMissionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_UploadMissionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_CancelMissionUploadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_CancelMissionUploadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_DownloadMissionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_DownloadMissionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_CancelMissionDownloadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_CancelMissionDownloadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_StartMissionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_StartMissionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_PauseMissionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_PauseMissionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_ClearMissionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_ClearMissionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_SetCurrentMissionItemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_SetCurrentMissionItemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_SubscribeMissionProgressRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_MissionProgressResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_SubscribeMissionChangedRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_MissionChangedResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_MissionProgress_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_MissionItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mavsdk::rpc::mission_raw::_MissionRawResult_default_instance_),
};

const char descriptor_table_protodef_mission_5fraw_2fmission_5fraw_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035mission_raw/mission_raw.proto\022\026mavsdk."
  "rpc.mission_raw\032\024mavsdk_options.proto\"R\n"
  "\024UploadMissionRequest\022:\n\rmission_items\030\001"
  " \003(\0132#.mavsdk.rpc.mission_raw.MissionIte"
  "m\"]\n\025UploadMissionResponse\022D\n\022mission_ra"
  "w_result\030\001 \001(\0132(.mavsdk.rpc.mission_raw."
  "MissionRawResult\"\034\n\032CancelMissionUploadR"
  "equest\"c\n\033CancelMissionUploadResponse\022D\n"
  "\022mission_raw_result\030\001 \001(\0132(.mavsdk.rpc.m"
  "ission_raw.MissionRawResult\"\030\n\026DownloadM"
  "issionRequest\"\233\001\n\027DownloadMissionRespons"
  "e\022D\n\022mission_raw_result\030\001 \001(\0132(.mavsdk.r"
  "pc.mission_raw.MissionRawResult\022:\n\rmissi"
  "on_items\030\002 \003(\0132#.mavsdk.rpc.mission_raw."
  "MissionItem\"\036\n\034CancelMissionDownloadRequ"
  "est\"e\n\035CancelMissionDownloadResponse\022D\n\022"
  "mission_raw_result\030\001 \001(\0132(.mavsdk.rpc.mi"
  "ssion_raw.MissionRawResult\"\025\n\023StartMissi"
  "onRequest\"\\\n\024StartMissionResponse\022D\n\022mis"
  "sion_raw_result\030\001 \001(\0132(.mavsdk.rpc.missi"
  "on_raw.MissionRawResult\"\025\n\023PauseMissionR"
  "equest\"\\\n\024PauseMissionResponse\022D\n\022missio"
  "n_raw_result\030\001 \001(\0132(.mavsdk.rpc.mission_"
  "raw.MissionRawResult\"\025\n\023ClearMissionRequ"
  "est\"\\\n\024ClearMissionResponse\022D\n\022mission_r"
  "aw_result\030\001 \001(\0132(.mavsdk.rpc.mission_raw"
  ".MissionRawResult\"-\n\034SetCurrentMissionIt"
  "emRequest\022\r\n\005index\030\001 \001(\005\"e\n\035SetCurrentMi"
  "ssionItemResponse\022D\n\022mission_raw_result\030"
  "\001 \001(\0132(.mavsdk.rpc.mission_raw.MissionRa"
  "wResult\"!\n\037SubscribeMissionProgressReque"
  "st\"\\\n\027MissionProgressResponse\022A\n\020mission"
  "_progress\030\001 \001(\0132\'.mavsdk.rpc.mission_raw"
  ".MissionProgress\" \n\036SubscribeMissionChan"
  "gedRequest\"1\n\026MissionChangedResponse\022\027\n\017"
  "mission_changed\030\001 \001(\010\"1\n\017MissionProgress"
  "\022\017\n\007current\030\001 \001(\005\022\r\n\005total\030\002 \001(\005\"\330\001\n\013Mis"
  "sionItem\022\013\n\003seq\030\001 \001(\r\022\r\n\005frame\030\002 \001(\r\022\017\n\007"
  "command\030\003 \001(\r\022\017\n\007current\030\004 \001(\r\022\024\n\014autoco"
  "ntinue\030\005 \001(\r\022\016\n\006param1\030\006 \001(\002\022\016\n\006param2\030\007"
  " \001(\002\022\016\n\006param3\030\010 \001(\002\022\016\n\006param4\030\t \001(\002\022\t\n\001"
  "x\030\n \001(\005\022\t\n\001y\030\013 \001(\005\022\t\n\001z\030\014 \001(\002\022\024\n\014mission"
  "_type\030\r \001(\r\"\351\002\n\020MissionRawResult\022\?\n\006resu"
  "lt\030\001 \001(\0162/.mavsdk.rpc.mission_raw.Missio"
  "nRawResult.Result\022\022\n\nresult_str\030\002 \001(\t\"\377\001"
  "\n\006Result\022\022\n\016RESULT_UNKNOWN\020\000\022\022\n\016RESULT_S"
  "UCCESS\020\001\022\020\n\014RESULT_ERROR\020\002\022!\n\035RESULT_TOO"
  "_MANY_MISSION_ITEMS\020\003\022\017\n\013RESULT_BUSY\020\004\022\022"
  "\n\016RESULT_TIMEOUT\020\005\022\033\n\027RESULT_INVALID_ARG"
  "UMENT\020\006\022\026\n\022RESULT_UNSUPPORTED\020\007\022\037\n\033RESUL"
  "T_NO_MISSION_AVAILABLE\020\010\022\035\n\031RESULT_TRANS"
  "FER_CANCELLED\020\t2\364\t\n\021MissionRawService\022n\n"
  "\rUploadMission\022,.mavsdk.rpc.mission_raw."
  "UploadMissionRequest\032-.mavsdk.rpc.missio"
  "n_raw.UploadMissionResponse\"\000\022\204\001\n\023Cancel"
  "MissionUpload\0222.mavsdk.rpc.mission_raw.C"
  "ancelMissionUploadRequest\0323.mavsdk.rpc.m"
  "ission_raw.CancelMissionUploadResponse\"\004"
  "\200\265\030\001\022t\n\017DownloadMission\022..mavsdk.rpc.mis"
  "sion_raw.DownloadMissionRequest\032/.mavsdk"
  ".rpc.mission_raw.DownloadMissionResponse"
  "\"\000\022\212\001\n\025CancelMissionDownload\0224.mavsdk.rp"
  "c.mission_raw.CancelMissionDownloadReque"
  "st\0325.mavsdk.rpc.mission_raw.CancelMissio"
  "nDownloadResponse\"\004\200\265\030\001\022k\n\014StartMission\022"
  "+.mavsdk.rpc.mission_raw.StartMissionReq"
  "uest\032,.mavsdk.rpc.mission_raw.StartMissi"
  "onResponse\"\000\022k\n\014PauseMission\022+.mavsdk.rp"
  "c.mission_raw.PauseMissionRequest\032,.mavs"
  "dk.rpc.mission_raw.PauseMissionResponse\""
  "\000\022k\n\014ClearMission\022+.mavsdk.rpc.mission_r"
  "aw.ClearMissionRequest\032,.mavsdk.rpc.miss"
  "ion_raw.ClearMissionResponse\"\000\022\206\001\n\025SetCu"
  "rrentMissionItem\0224.mavsdk.rpc.mission_ra"
  "w.SetCurrentMissionItemRequest\0325.mavsdk."
  "rpc.mission_raw.SetCurrentMissionItemRes"
  "ponse\"\000\022\210\001\n\030SubscribeMissionProgress\0227.m"
  "avsdk.rpc.mission_raw.SubscribeMissionPr"
  "ogressRequest\032/.mavsdk.rpc.mission_raw.M"
  "issionProgressResponse\"\0000\001\022\211\001\n\027Subscribe"
  "MissionChanged\0226.mavsdk.rpc.mission_raw."
  "SubscribeMissionChangedRequest\032..mavsdk."
  "rpc.mission_raw.MissionChangedResponse\"\004"
  "\200\265\030\0000\001B(\n\025io.mavsdk.mission_rawB\017Mission"
  "RawProtob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mission_5fraw_2fmission_5fraw_2eproto_deps[1] = {
  &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mission_5fraw_2fmission_5fraw_2eproto_sccs[23] = {
  &scc_info_CancelMissionDownloadRequest_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_CancelMissionDownloadResponse_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_CancelMissionUploadRequest_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_CancelMissionUploadResponse_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_ClearMissionRequest_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_ClearMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_DownloadMissionRequest_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_DownloadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_MissionChangedResponse_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_MissionItem_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_MissionProgress_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_MissionProgressResponse_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_PauseMissionRequest_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_PauseMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_SetCurrentMissionItemRequest_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_SetCurrentMissionItemResponse_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_StartMissionRequest_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_StartMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_SubscribeMissionChangedRequest_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_SubscribeMissionProgressRequest_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_UploadMissionRequest_mission_5fraw_2fmission_5fraw_2eproto.base,
  &scc_info_UploadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mission_5fraw_2fmission_5fraw_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mission_5fraw_2fmission_5fraw_2eproto = {
  false, false, descriptor_table_protodef_mission_5fraw_2fmission_5fraw_2eproto, "mission_raw/mission_raw.proto", 3376,
  &descriptor_table_mission_5fraw_2fmission_5fraw_2eproto_once, descriptor_table_mission_5fraw_2fmission_5fraw_2eproto_sccs, descriptor_table_mission_5fraw_2fmission_5fraw_2eproto_deps, 23, 1,
  schemas, file_default_instances, TableStruct_mission_5fraw_2fmission_5fraw_2eproto::offsets,
  file_level_metadata_mission_5fraw_2fmission_5fraw_2eproto, 23, file_level_enum_descriptors_mission_5fraw_2fmission_5fraw_2eproto, file_level_service_descriptors_mission_5fraw_2fmission_5fraw_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mission_5fraw_2fmission_5fraw_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mission_5fraw_2fmission_5fraw_2eproto)), true);
namespace mavsdk {
namespace rpc {
namespace mission_raw {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MissionRawResult_Result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_mission_5fraw_2fmission_5fraw_2eproto);
  return file_level_enum_descriptors_mission_5fraw_2fmission_5fraw_2eproto[0];
}
bool MissionRawResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr MissionRawResult_Result MissionRawResult::RESULT_UNKNOWN;
constexpr MissionRawResult_Result MissionRawResult::RESULT_SUCCESS;
constexpr MissionRawResult_Result MissionRawResult::RESULT_ERROR;
constexpr MissionRawResult_Result MissionRawResult::RESULT_TOO_MANY_MISSION_ITEMS;
constexpr MissionRawResult_Result MissionRawResult::RESULT_BUSY;
constexpr MissionRawResult_Result MissionRawResult::RESULT_TIMEOUT;
constexpr MissionRawResult_Result MissionRawResult::RESULT_INVALID_ARGUMENT;
constexpr MissionRawResult_Result MissionRawResult::RESULT_UNSUPPORTED;
constexpr MissionRawResult_Result MissionRawResult::RESULT_NO_MISSION_AVAILABLE;
constexpr MissionRawResult_Result MissionRawResult::RESULT_TRANSFER_CANCELLED;
constexpr MissionRawResult_Result MissionRawResult::Result_MIN;
constexpr MissionRawResult_Result MissionRawResult::Result_MAX;
constexpr int MissionRawResult::Result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void UploadMissionRequest::InitAsDefaultInstance() {
}
class UploadMissionRequest::_Internal {
 public:
};

UploadMissionRequest::UploadMissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  mission_items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.UploadMissionRequest)
}
UploadMissionRequest::UploadMissionRequest(const UploadMissionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      mission_items_(from.mission_items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.UploadMissionRequest)
}

void UploadMissionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UploadMissionRequest_mission_5fraw_2fmission_5fraw_2eproto.base);
}

UploadMissionRequest::~UploadMissionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.UploadMissionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UploadMissionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UploadMissionRequest::ArenaDtor(void* object) {
  UploadMissionRequest* _this = reinterpret_cast< UploadMissionRequest* >(object);
  (void)_this;
}
void UploadMissionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadMissionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UploadMissionRequest& UploadMissionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UploadMissionRequest_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void UploadMissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.UploadMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mission_items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadMissionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .mavsdk.rpc.mission_raw.MissionItem mission_items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mission_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UploadMissionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.UploadMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.mission_raw.MissionItem mission_items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_mission_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_mission_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.UploadMissionRequest)
  return target;
}

size_t UploadMissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.UploadMissionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.mission_raw.MissionItem mission_items = 1;
  total_size += 1UL * this->_internal_mission_items_size();
  for (const auto& msg : this->mission_items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadMissionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.UploadMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadMissionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UploadMissionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.UploadMissionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.UploadMissionRequest)
    MergeFrom(*source);
  }
}

void UploadMissionRequest::MergeFrom(const UploadMissionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.UploadMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mission_items_.MergeFrom(from.mission_items_);
}

void UploadMissionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.UploadMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadMissionRequest::CopyFrom(const UploadMissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.UploadMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadMissionRequest::IsInitialized() const {
  return true;
}

void UploadMissionRequest::InternalSwap(UploadMissionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mission_items_.InternalSwap(&other->mission_items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadMissionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UploadMissionResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_raw::_UploadMissionResponse_default_instance_._instance.get_mutable()->mission_raw_result_ = const_cast< ::mavsdk::rpc::mission_raw::MissionRawResult*>(
      ::mavsdk::rpc::mission_raw::MissionRawResult::internal_default_instance());
}
class UploadMissionResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_raw::MissionRawResult& mission_raw_result(const UploadMissionResponse* msg);
};

const ::mavsdk::rpc::mission_raw::MissionRawResult&
UploadMissionResponse::_Internal::mission_raw_result(const UploadMissionResponse* msg) {
  return *msg->mission_raw_result_;
}
UploadMissionResponse::UploadMissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.UploadMissionResponse)
}
UploadMissionResponse::UploadMissionResponse(const UploadMissionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_raw_result()) {
    mission_raw_result_ = new ::mavsdk::rpc::mission_raw::MissionRawResult(*from.mission_raw_result_);
  } else {
    mission_raw_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.UploadMissionResponse)
}

void UploadMissionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UploadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  mission_raw_result_ = nullptr;
}

UploadMissionResponse::~UploadMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.UploadMissionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UploadMissionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_raw_result_;
}

void UploadMissionResponse::ArenaDtor(void* object) {
  UploadMissionResponse* _this = reinterpret_cast< UploadMissionResponse* >(object);
  (void)_this;
}
void UploadMissionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadMissionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UploadMissionResponse& UploadMissionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UploadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void UploadMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.UploadMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_raw_result_ != nullptr) {
    delete mission_raw_result_;
  }
  mission_raw_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadMissionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_raw_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UploadMissionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.UploadMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_raw_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.UploadMissionResponse)
  return target;
}

size_t UploadMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.UploadMissionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_raw_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadMissionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.UploadMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadMissionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UploadMissionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.UploadMissionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.UploadMissionResponse)
    MergeFrom(*source);
  }
}

void UploadMissionResponse::MergeFrom(const UploadMissionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.UploadMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_raw_result()) {
    _internal_mutable_mission_raw_result()->::mavsdk::rpc::mission_raw::MissionRawResult::MergeFrom(from._internal_mission_raw_result());
  }
}

void UploadMissionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.UploadMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadMissionResponse::CopyFrom(const UploadMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.UploadMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadMissionResponse::IsInitialized() const {
  return true;
}

void UploadMissionResponse::InternalSwap(UploadMissionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_raw_result_, other->mission_raw_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadMissionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CancelMissionUploadRequest::InitAsDefaultInstance() {
}
class CancelMissionUploadRequest::_Internal {
 public:
};

CancelMissionUploadRequest::CancelMissionUploadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
}
CancelMissionUploadRequest::CancelMissionUploadRequest(const CancelMissionUploadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
}

void CancelMissionUploadRequest::SharedCtor() {
}

CancelMissionUploadRequest::~CancelMissionUploadRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelMissionUploadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CancelMissionUploadRequest::ArenaDtor(void* object) {
  CancelMissionUploadRequest* _this = reinterpret_cast< CancelMissionUploadRequest* >(object);
  (void)_this;
}
void CancelMissionUploadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelMissionUploadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelMissionUploadRequest& CancelMissionUploadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelMissionUploadRequest_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void CancelMissionUploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelMissionUploadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelMissionUploadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
  return target;
}

size_t CancelMissionUploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelMissionUploadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelMissionUploadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelMissionUploadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
    MergeFrom(*source);
  }
}

void CancelMissionUploadRequest::MergeFrom(const CancelMissionUploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CancelMissionUploadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelMissionUploadRequest::CopyFrom(const CancelMissionUploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.CancelMissionUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelMissionUploadRequest::IsInitialized() const {
  return true;
}

void CancelMissionUploadRequest::InternalSwap(CancelMissionUploadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelMissionUploadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CancelMissionUploadResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_raw::_CancelMissionUploadResponse_default_instance_._instance.get_mutable()->mission_raw_result_ = const_cast< ::mavsdk::rpc::mission_raw::MissionRawResult*>(
      ::mavsdk::rpc::mission_raw::MissionRawResult::internal_default_instance());
}
class CancelMissionUploadResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_raw::MissionRawResult& mission_raw_result(const CancelMissionUploadResponse* msg);
};

const ::mavsdk::rpc::mission_raw::MissionRawResult&
CancelMissionUploadResponse::_Internal::mission_raw_result(const CancelMissionUploadResponse* msg) {
  return *msg->mission_raw_result_;
}
CancelMissionUploadResponse::CancelMissionUploadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
}
CancelMissionUploadResponse::CancelMissionUploadResponse(const CancelMissionUploadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_raw_result()) {
    mission_raw_result_ = new ::mavsdk::rpc::mission_raw::MissionRawResult(*from.mission_raw_result_);
  } else {
    mission_raw_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
}

void CancelMissionUploadResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CancelMissionUploadResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  mission_raw_result_ = nullptr;
}

CancelMissionUploadResponse::~CancelMissionUploadResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelMissionUploadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_raw_result_;
}

void CancelMissionUploadResponse::ArenaDtor(void* object) {
  CancelMissionUploadResponse* _this = reinterpret_cast< CancelMissionUploadResponse* >(object);
  (void)_this;
}
void CancelMissionUploadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelMissionUploadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelMissionUploadResponse& CancelMissionUploadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelMissionUploadResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void CancelMissionUploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_raw_result_ != nullptr) {
    delete mission_raw_result_;
  }
  mission_raw_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelMissionUploadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_raw_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelMissionUploadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_raw_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
  return target;
}

size_t CancelMissionUploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_raw_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelMissionUploadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelMissionUploadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelMissionUploadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
    MergeFrom(*source);
  }
}

void CancelMissionUploadResponse::MergeFrom(const CancelMissionUploadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_raw_result()) {
    _internal_mutable_mission_raw_result()->::mavsdk::rpc::mission_raw::MissionRawResult::MergeFrom(from._internal_mission_raw_result());
  }
}

void CancelMissionUploadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelMissionUploadResponse::CopyFrom(const CancelMissionUploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.CancelMissionUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelMissionUploadResponse::IsInitialized() const {
  return true;
}

void CancelMissionUploadResponse::InternalSwap(CancelMissionUploadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_raw_result_, other->mission_raw_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelMissionUploadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DownloadMissionRequest::InitAsDefaultInstance() {
}
class DownloadMissionRequest::_Internal {
 public:
};

DownloadMissionRequest::DownloadMissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.DownloadMissionRequest)
}
DownloadMissionRequest::DownloadMissionRequest(const DownloadMissionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.DownloadMissionRequest)
}

void DownloadMissionRequest::SharedCtor() {
}

DownloadMissionRequest::~DownloadMissionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.DownloadMissionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DownloadMissionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DownloadMissionRequest::ArenaDtor(void* object) {
  DownloadMissionRequest* _this = reinterpret_cast< DownloadMissionRequest* >(object);
  (void)_this;
}
void DownloadMissionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DownloadMissionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DownloadMissionRequest& DownloadMissionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DownloadMissionRequest_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void DownloadMissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.DownloadMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DownloadMissionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DownloadMissionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.DownloadMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.DownloadMissionRequest)
  return target;
}

size_t DownloadMissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.DownloadMissionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DownloadMissionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.DownloadMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadMissionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DownloadMissionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.DownloadMissionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.DownloadMissionRequest)
    MergeFrom(*source);
  }
}

void DownloadMissionRequest::MergeFrom(const DownloadMissionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.DownloadMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DownloadMissionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.DownloadMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadMissionRequest::CopyFrom(const DownloadMissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.DownloadMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadMissionRequest::IsInitialized() const {
  return true;
}

void DownloadMissionRequest::InternalSwap(DownloadMissionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DownloadMissionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DownloadMissionResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_raw::_DownloadMissionResponse_default_instance_._instance.get_mutable()->mission_raw_result_ = const_cast< ::mavsdk::rpc::mission_raw::MissionRawResult*>(
      ::mavsdk::rpc::mission_raw::MissionRawResult::internal_default_instance());
}
class DownloadMissionResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_raw::MissionRawResult& mission_raw_result(const DownloadMissionResponse* msg);
};

const ::mavsdk::rpc::mission_raw::MissionRawResult&
DownloadMissionResponse::_Internal::mission_raw_result(const DownloadMissionResponse* msg) {
  return *msg->mission_raw_result_;
}
DownloadMissionResponse::DownloadMissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  mission_items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.DownloadMissionResponse)
}
DownloadMissionResponse::DownloadMissionResponse(const DownloadMissionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      mission_items_(from.mission_items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_raw_result()) {
    mission_raw_result_ = new ::mavsdk::rpc::mission_raw::MissionRawResult(*from.mission_raw_result_);
  } else {
    mission_raw_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.DownloadMissionResponse)
}

void DownloadMissionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DownloadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  mission_raw_result_ = nullptr;
}

DownloadMissionResponse::~DownloadMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.DownloadMissionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DownloadMissionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_raw_result_;
}

void DownloadMissionResponse::ArenaDtor(void* object) {
  DownloadMissionResponse* _this = reinterpret_cast< DownloadMissionResponse* >(object);
  (void)_this;
}
void DownloadMissionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DownloadMissionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DownloadMissionResponse& DownloadMissionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DownloadMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void DownloadMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.DownloadMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mission_items_.Clear();
  if (GetArena() == nullptr && mission_raw_result_ != nullptr) {
    delete mission_raw_result_;
  }
  mission_raw_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DownloadMissionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_raw_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .mavsdk.rpc.mission_raw.MissionItem mission_items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mission_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DownloadMissionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.DownloadMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_raw_result(this), target, stream);
  }

  // repeated .mavsdk.rpc.mission_raw.MissionItem mission_items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_mission_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_mission_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.DownloadMissionResponse)
  return target;
}

size_t DownloadMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.DownloadMissionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.mission_raw.MissionItem mission_items = 2;
  total_size += 1UL * this->_internal_mission_items_size();
  for (const auto& msg : this->mission_items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_raw_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DownloadMissionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.DownloadMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadMissionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DownloadMissionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.DownloadMissionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.DownloadMissionResponse)
    MergeFrom(*source);
  }
}

void DownloadMissionResponse::MergeFrom(const DownloadMissionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.DownloadMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mission_items_.MergeFrom(from.mission_items_);
  if (from.has_mission_raw_result()) {
    _internal_mutable_mission_raw_result()->::mavsdk::rpc::mission_raw::MissionRawResult::MergeFrom(from._internal_mission_raw_result());
  }
}

void DownloadMissionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.DownloadMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadMissionResponse::CopyFrom(const DownloadMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.DownloadMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadMissionResponse::IsInitialized() const {
  return true;
}

void DownloadMissionResponse::InternalSwap(DownloadMissionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mission_items_.InternalSwap(&other->mission_items_);
  swap(mission_raw_result_, other->mission_raw_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DownloadMissionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CancelMissionDownloadRequest::InitAsDefaultInstance() {
}
class CancelMissionDownloadRequest::_Internal {
 public:
};

CancelMissionDownloadRequest::CancelMissionDownloadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
}
CancelMissionDownloadRequest::CancelMissionDownloadRequest(const CancelMissionDownloadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
}

void CancelMissionDownloadRequest::SharedCtor() {
}

CancelMissionDownloadRequest::~CancelMissionDownloadRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelMissionDownloadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CancelMissionDownloadRequest::ArenaDtor(void* object) {
  CancelMissionDownloadRequest* _this = reinterpret_cast< CancelMissionDownloadRequest* >(object);
  (void)_this;
}
void CancelMissionDownloadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelMissionDownloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelMissionDownloadRequest& CancelMissionDownloadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelMissionDownloadRequest_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void CancelMissionDownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelMissionDownloadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelMissionDownloadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
  return target;
}

size_t CancelMissionDownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelMissionDownloadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelMissionDownloadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelMissionDownloadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
    MergeFrom(*source);
  }
}

void CancelMissionDownloadRequest::MergeFrom(const CancelMissionDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CancelMissionDownloadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelMissionDownloadRequest::CopyFrom(const CancelMissionDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.CancelMissionDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelMissionDownloadRequest::IsInitialized() const {
  return true;
}

void CancelMissionDownloadRequest::InternalSwap(CancelMissionDownloadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelMissionDownloadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CancelMissionDownloadResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_raw::_CancelMissionDownloadResponse_default_instance_._instance.get_mutable()->mission_raw_result_ = const_cast< ::mavsdk::rpc::mission_raw::MissionRawResult*>(
      ::mavsdk::rpc::mission_raw::MissionRawResult::internal_default_instance());
}
class CancelMissionDownloadResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_raw::MissionRawResult& mission_raw_result(const CancelMissionDownloadResponse* msg);
};

const ::mavsdk::rpc::mission_raw::MissionRawResult&
CancelMissionDownloadResponse::_Internal::mission_raw_result(const CancelMissionDownloadResponse* msg) {
  return *msg->mission_raw_result_;
}
CancelMissionDownloadResponse::CancelMissionDownloadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
}
CancelMissionDownloadResponse::CancelMissionDownloadResponse(const CancelMissionDownloadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_raw_result()) {
    mission_raw_result_ = new ::mavsdk::rpc::mission_raw::MissionRawResult(*from.mission_raw_result_);
  } else {
    mission_raw_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
}

void CancelMissionDownloadResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CancelMissionDownloadResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  mission_raw_result_ = nullptr;
}

CancelMissionDownloadResponse::~CancelMissionDownloadResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CancelMissionDownloadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_raw_result_;
}

void CancelMissionDownloadResponse::ArenaDtor(void* object) {
  CancelMissionDownloadResponse* _this = reinterpret_cast< CancelMissionDownloadResponse* >(object);
  (void)_this;
}
void CancelMissionDownloadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CancelMissionDownloadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelMissionDownloadResponse& CancelMissionDownloadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelMissionDownloadResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void CancelMissionDownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_raw_result_ != nullptr) {
    delete mission_raw_result_;
  }
  mission_raw_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CancelMissionDownloadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_raw_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelMissionDownloadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_raw_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
  return target;
}

size_t CancelMissionDownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_raw_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelMissionDownloadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelMissionDownloadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelMissionDownloadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
    MergeFrom(*source);
  }
}

void CancelMissionDownloadResponse::MergeFrom(const CancelMissionDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_raw_result()) {
    _internal_mutable_mission_raw_result()->::mavsdk::rpc::mission_raw::MissionRawResult::MergeFrom(from._internal_mission_raw_result());
  }
}

void CancelMissionDownloadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelMissionDownloadResponse::CopyFrom(const CancelMissionDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.CancelMissionDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelMissionDownloadResponse::IsInitialized() const {
  return true;
}

void CancelMissionDownloadResponse::InternalSwap(CancelMissionDownloadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_raw_result_, other->mission_raw_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelMissionDownloadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartMissionRequest::InitAsDefaultInstance() {
}
class StartMissionRequest::_Internal {
 public:
};

StartMissionRequest::StartMissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.StartMissionRequest)
}
StartMissionRequest::StartMissionRequest(const StartMissionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.StartMissionRequest)
}

void StartMissionRequest::SharedCtor() {
}

StartMissionRequest::~StartMissionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.StartMissionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartMissionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StartMissionRequest::ArenaDtor(void* object) {
  StartMissionRequest* _this = reinterpret_cast< StartMissionRequest* >(object);
  (void)_this;
}
void StartMissionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartMissionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartMissionRequest& StartMissionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartMissionRequest_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void StartMissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.StartMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartMissionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartMissionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.StartMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.StartMissionRequest)
  return target;
}

size_t StartMissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.StartMissionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartMissionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.StartMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartMissionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartMissionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.StartMissionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.StartMissionRequest)
    MergeFrom(*source);
  }
}

void StartMissionRequest::MergeFrom(const StartMissionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.StartMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StartMissionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.StartMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartMissionRequest::CopyFrom(const StartMissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.StartMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartMissionRequest::IsInitialized() const {
  return true;
}

void StartMissionRequest::InternalSwap(StartMissionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartMissionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartMissionResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_raw::_StartMissionResponse_default_instance_._instance.get_mutable()->mission_raw_result_ = const_cast< ::mavsdk::rpc::mission_raw::MissionRawResult*>(
      ::mavsdk::rpc::mission_raw::MissionRawResult::internal_default_instance());
}
class StartMissionResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_raw::MissionRawResult& mission_raw_result(const StartMissionResponse* msg);
};

const ::mavsdk::rpc::mission_raw::MissionRawResult&
StartMissionResponse::_Internal::mission_raw_result(const StartMissionResponse* msg) {
  return *msg->mission_raw_result_;
}
StartMissionResponse::StartMissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.StartMissionResponse)
}
StartMissionResponse::StartMissionResponse(const StartMissionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_raw_result()) {
    mission_raw_result_ = new ::mavsdk::rpc::mission_raw::MissionRawResult(*from.mission_raw_result_);
  } else {
    mission_raw_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.StartMissionResponse)
}

void StartMissionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  mission_raw_result_ = nullptr;
}

StartMissionResponse::~StartMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.StartMissionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartMissionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_raw_result_;
}

void StartMissionResponse::ArenaDtor(void* object) {
  StartMissionResponse* _this = reinterpret_cast< StartMissionResponse* >(object);
  (void)_this;
}
void StartMissionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartMissionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartMissionResponse& StartMissionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void StartMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.StartMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_raw_result_ != nullptr) {
    delete mission_raw_result_;
  }
  mission_raw_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartMissionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_raw_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartMissionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.StartMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_raw_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.StartMissionResponse)
  return target;
}

size_t StartMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.StartMissionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_raw_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartMissionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.StartMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StartMissionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartMissionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.StartMissionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.StartMissionResponse)
    MergeFrom(*source);
  }
}

void StartMissionResponse::MergeFrom(const StartMissionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.StartMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_raw_result()) {
    _internal_mutable_mission_raw_result()->::mavsdk::rpc::mission_raw::MissionRawResult::MergeFrom(from._internal_mission_raw_result());
  }
}

void StartMissionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.StartMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartMissionResponse::CopyFrom(const StartMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.StartMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartMissionResponse::IsInitialized() const {
  return true;
}

void StartMissionResponse::InternalSwap(StartMissionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_raw_result_, other->mission_raw_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartMissionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PauseMissionRequest::InitAsDefaultInstance() {
}
class PauseMissionRequest::_Internal {
 public:
};

PauseMissionRequest::PauseMissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.PauseMissionRequest)
}
PauseMissionRequest::PauseMissionRequest(const PauseMissionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.PauseMissionRequest)
}

void PauseMissionRequest::SharedCtor() {
}

PauseMissionRequest::~PauseMissionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.PauseMissionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PauseMissionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PauseMissionRequest::ArenaDtor(void* object) {
  PauseMissionRequest* _this = reinterpret_cast< PauseMissionRequest* >(object);
  (void)_this;
}
void PauseMissionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PauseMissionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PauseMissionRequest& PauseMissionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PauseMissionRequest_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void PauseMissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.PauseMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PauseMissionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PauseMissionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.PauseMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.PauseMissionRequest)
  return target;
}

size_t PauseMissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.PauseMissionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PauseMissionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.PauseMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PauseMissionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PauseMissionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.PauseMissionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.PauseMissionRequest)
    MergeFrom(*source);
  }
}

void PauseMissionRequest::MergeFrom(const PauseMissionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.PauseMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PauseMissionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.PauseMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseMissionRequest::CopyFrom(const PauseMissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.PauseMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseMissionRequest::IsInitialized() const {
  return true;
}

void PauseMissionRequest::InternalSwap(PauseMissionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PauseMissionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PauseMissionResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_raw::_PauseMissionResponse_default_instance_._instance.get_mutable()->mission_raw_result_ = const_cast< ::mavsdk::rpc::mission_raw::MissionRawResult*>(
      ::mavsdk::rpc::mission_raw::MissionRawResult::internal_default_instance());
}
class PauseMissionResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_raw::MissionRawResult& mission_raw_result(const PauseMissionResponse* msg);
};

const ::mavsdk::rpc::mission_raw::MissionRawResult&
PauseMissionResponse::_Internal::mission_raw_result(const PauseMissionResponse* msg) {
  return *msg->mission_raw_result_;
}
PauseMissionResponse::PauseMissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.PauseMissionResponse)
}
PauseMissionResponse::PauseMissionResponse(const PauseMissionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_raw_result()) {
    mission_raw_result_ = new ::mavsdk::rpc::mission_raw::MissionRawResult(*from.mission_raw_result_);
  } else {
    mission_raw_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.PauseMissionResponse)
}

void PauseMissionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PauseMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  mission_raw_result_ = nullptr;
}

PauseMissionResponse::~PauseMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.PauseMissionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PauseMissionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_raw_result_;
}

void PauseMissionResponse::ArenaDtor(void* object) {
  PauseMissionResponse* _this = reinterpret_cast< PauseMissionResponse* >(object);
  (void)_this;
}
void PauseMissionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PauseMissionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PauseMissionResponse& PauseMissionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PauseMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void PauseMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.PauseMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_raw_result_ != nullptr) {
    delete mission_raw_result_;
  }
  mission_raw_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PauseMissionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_raw_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PauseMissionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.PauseMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_raw_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.PauseMissionResponse)
  return target;
}

size_t PauseMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.PauseMissionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_raw_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PauseMissionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.PauseMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PauseMissionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PauseMissionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.PauseMissionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.PauseMissionResponse)
    MergeFrom(*source);
  }
}

void PauseMissionResponse::MergeFrom(const PauseMissionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.PauseMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_raw_result()) {
    _internal_mutable_mission_raw_result()->::mavsdk::rpc::mission_raw::MissionRawResult::MergeFrom(from._internal_mission_raw_result());
  }
}

void PauseMissionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.PauseMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseMissionResponse::CopyFrom(const PauseMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.PauseMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseMissionResponse::IsInitialized() const {
  return true;
}

void PauseMissionResponse::InternalSwap(PauseMissionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_raw_result_, other->mission_raw_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PauseMissionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearMissionRequest::InitAsDefaultInstance() {
}
class ClearMissionRequest::_Internal {
 public:
};

ClearMissionRequest::ClearMissionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.ClearMissionRequest)
}
ClearMissionRequest::ClearMissionRequest(const ClearMissionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.ClearMissionRequest)
}

void ClearMissionRequest::SharedCtor() {
}

ClearMissionRequest::~ClearMissionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.ClearMissionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearMissionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ClearMissionRequest::ArenaDtor(void* object) {
  ClearMissionRequest* _this = reinterpret_cast< ClearMissionRequest* >(object);
  (void)_this;
}
void ClearMissionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearMissionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearMissionRequest& ClearMissionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearMissionRequest_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void ClearMissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.ClearMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearMissionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearMissionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.ClearMissionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.ClearMissionRequest)
  return target;
}

size_t ClearMissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.ClearMissionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearMissionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.ClearMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearMissionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearMissionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.ClearMissionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.ClearMissionRequest)
    MergeFrom(*source);
  }
}

void ClearMissionRequest::MergeFrom(const ClearMissionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.ClearMissionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClearMissionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.ClearMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearMissionRequest::CopyFrom(const ClearMissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.ClearMissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearMissionRequest::IsInitialized() const {
  return true;
}

void ClearMissionRequest::InternalSwap(ClearMissionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearMissionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ClearMissionResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_raw::_ClearMissionResponse_default_instance_._instance.get_mutable()->mission_raw_result_ = const_cast< ::mavsdk::rpc::mission_raw::MissionRawResult*>(
      ::mavsdk::rpc::mission_raw::MissionRawResult::internal_default_instance());
}
class ClearMissionResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_raw::MissionRawResult& mission_raw_result(const ClearMissionResponse* msg);
};

const ::mavsdk::rpc::mission_raw::MissionRawResult&
ClearMissionResponse::_Internal::mission_raw_result(const ClearMissionResponse* msg) {
  return *msg->mission_raw_result_;
}
ClearMissionResponse::ClearMissionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.ClearMissionResponse)
}
ClearMissionResponse::ClearMissionResponse(const ClearMissionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_raw_result()) {
    mission_raw_result_ = new ::mavsdk::rpc::mission_raw::MissionRawResult(*from.mission_raw_result_);
  } else {
    mission_raw_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.ClearMissionResponse)
}

void ClearMissionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClearMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  mission_raw_result_ = nullptr;
}

ClearMissionResponse::~ClearMissionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.ClearMissionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClearMissionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_raw_result_;
}

void ClearMissionResponse::ArenaDtor(void* object) {
  ClearMissionResponse* _this = reinterpret_cast< ClearMissionResponse* >(object);
  (void)_this;
}
void ClearMissionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClearMissionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClearMissionResponse& ClearMissionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClearMissionResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void ClearMissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.ClearMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_raw_result_ != nullptr) {
    delete mission_raw_result_;
  }
  mission_raw_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClearMissionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_raw_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClearMissionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.ClearMissionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_raw_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.ClearMissionResponse)
  return target;
}

size_t ClearMissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.ClearMissionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_raw_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClearMissionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.ClearMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearMissionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClearMissionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.ClearMissionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.ClearMissionResponse)
    MergeFrom(*source);
  }
}

void ClearMissionResponse::MergeFrom(const ClearMissionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.ClearMissionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_raw_result()) {
    _internal_mutable_mission_raw_result()->::mavsdk::rpc::mission_raw::MissionRawResult::MergeFrom(from._internal_mission_raw_result());
  }
}

void ClearMissionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.ClearMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearMissionResponse::CopyFrom(const ClearMissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.ClearMissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearMissionResponse::IsInitialized() const {
  return true;
}

void ClearMissionResponse::InternalSwap(ClearMissionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_raw_result_, other->mission_raw_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClearMissionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetCurrentMissionItemRequest::InitAsDefaultInstance() {
}
class SetCurrentMissionItemRequest::_Internal {
 public:
};

SetCurrentMissionItemRequest::SetCurrentMissionItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
}
SetCurrentMissionItemRequest::SetCurrentMissionItemRequest(const SetCurrentMissionItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
}

void SetCurrentMissionItemRequest::SharedCtor() {
  index_ = 0;
}

SetCurrentMissionItemRequest::~SetCurrentMissionItemRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetCurrentMissionItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetCurrentMissionItemRequest::ArenaDtor(void* object) {
  SetCurrentMissionItemRequest* _this = reinterpret_cast< SetCurrentMissionItemRequest* >(object);
  (void)_this;
}
void SetCurrentMissionItemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetCurrentMissionItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCurrentMissionItemRequest& SetCurrentMissionItemRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetCurrentMissionItemRequest_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void SetCurrentMissionItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetCurrentMissionItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetCurrentMissionItemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
  return target;
}

size_t SetCurrentMissionItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCurrentMissionItemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCurrentMissionItemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetCurrentMissionItemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
    MergeFrom(*source);
  }
}

void SetCurrentMissionItemRequest::MergeFrom(const SetCurrentMissionItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void SetCurrentMissionItemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCurrentMissionItemRequest::CopyFrom(const SetCurrentMissionItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCurrentMissionItemRequest::IsInitialized() const {
  return true;
}

void SetCurrentMissionItemRequest::InternalSwap(SetCurrentMissionItemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetCurrentMissionItemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetCurrentMissionItemResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_raw::_SetCurrentMissionItemResponse_default_instance_._instance.get_mutable()->mission_raw_result_ = const_cast< ::mavsdk::rpc::mission_raw::MissionRawResult*>(
      ::mavsdk::rpc::mission_raw::MissionRawResult::internal_default_instance());
}
class SetCurrentMissionItemResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_raw::MissionRawResult& mission_raw_result(const SetCurrentMissionItemResponse* msg);
};

const ::mavsdk::rpc::mission_raw::MissionRawResult&
SetCurrentMissionItemResponse::_Internal::mission_raw_result(const SetCurrentMissionItemResponse* msg) {
  return *msg->mission_raw_result_;
}
SetCurrentMissionItemResponse::SetCurrentMissionItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
}
SetCurrentMissionItemResponse::SetCurrentMissionItemResponse(const SetCurrentMissionItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_raw_result()) {
    mission_raw_result_ = new ::mavsdk::rpc::mission_raw::MissionRawResult(*from.mission_raw_result_);
  } else {
    mission_raw_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
}

void SetCurrentMissionItemResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetCurrentMissionItemResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  mission_raw_result_ = nullptr;
}

SetCurrentMissionItemResponse::~SetCurrentMissionItemResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetCurrentMissionItemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_raw_result_;
}

void SetCurrentMissionItemResponse::ArenaDtor(void* object) {
  SetCurrentMissionItemResponse* _this = reinterpret_cast< SetCurrentMissionItemResponse* >(object);
  (void)_this;
}
void SetCurrentMissionItemResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetCurrentMissionItemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetCurrentMissionItemResponse& SetCurrentMissionItemResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetCurrentMissionItemResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void SetCurrentMissionItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_raw_result_ != nullptr) {
    delete mission_raw_result_;
  }
  mission_raw_result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetCurrentMissionItemResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_raw_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetCurrentMissionItemResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_raw_result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
  return target;
}

size_t SetCurrentMissionItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult mission_raw_result = 1;
  if (this->has_mission_raw_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_raw_result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetCurrentMissionItemResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetCurrentMissionItemResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetCurrentMissionItemResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
    MergeFrom(*source);
  }
}

void SetCurrentMissionItemResponse::MergeFrom(const SetCurrentMissionItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_raw_result()) {
    _internal_mutable_mission_raw_result()->::mavsdk::rpc::mission_raw::MissionRawResult::MergeFrom(from._internal_mission_raw_result());
  }
}

void SetCurrentMissionItemResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCurrentMissionItemResponse::CopyFrom(const SetCurrentMissionItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.SetCurrentMissionItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCurrentMissionItemResponse::IsInitialized() const {
  return true;
}

void SetCurrentMissionItemResponse::InternalSwap(SetCurrentMissionItemResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_raw_result_, other->mission_raw_result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetCurrentMissionItemResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubscribeMissionProgressRequest::InitAsDefaultInstance() {
}
class SubscribeMissionProgressRequest::_Internal {
 public:
};

SubscribeMissionProgressRequest::SubscribeMissionProgressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
}
SubscribeMissionProgressRequest::SubscribeMissionProgressRequest(const SubscribeMissionProgressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
}

void SubscribeMissionProgressRequest::SharedCtor() {
}

SubscribeMissionProgressRequest::~SubscribeMissionProgressRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubscribeMissionProgressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SubscribeMissionProgressRequest::ArenaDtor(void* object) {
  SubscribeMissionProgressRequest* _this = reinterpret_cast< SubscribeMissionProgressRequest* >(object);
  (void)_this;
}
void SubscribeMissionProgressRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribeMissionProgressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscribeMissionProgressRequest& SubscribeMissionProgressRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscribeMissionProgressRequest_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void SubscribeMissionProgressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeMissionProgressRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribeMissionProgressRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
  return target;
}

size_t SubscribeMissionProgressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeMissionProgressRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeMissionProgressRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscribeMissionProgressRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
    MergeFrom(*source);
  }
}

void SubscribeMissionProgressRequest::MergeFrom(const SubscribeMissionProgressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SubscribeMissionProgressRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeMissionProgressRequest::CopyFrom(const SubscribeMissionProgressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.SubscribeMissionProgressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeMissionProgressRequest::IsInitialized() const {
  return true;
}

void SubscribeMissionProgressRequest::InternalSwap(SubscribeMissionProgressRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeMissionProgressRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MissionProgressResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::mission_raw::_MissionProgressResponse_default_instance_._instance.get_mutable()->mission_progress_ = const_cast< ::mavsdk::rpc::mission_raw::MissionProgress*>(
      ::mavsdk::rpc::mission_raw::MissionProgress::internal_default_instance());
}
class MissionProgressResponse::_Internal {
 public:
  static const ::mavsdk::rpc::mission_raw::MissionProgress& mission_progress(const MissionProgressResponse* msg);
};

const ::mavsdk::rpc::mission_raw::MissionProgress&
MissionProgressResponse::_Internal::mission_progress(const MissionProgressResponse* msg) {
  return *msg->mission_progress_;
}
MissionProgressResponse::MissionProgressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.MissionProgressResponse)
}
MissionProgressResponse::MissionProgressResponse(const MissionProgressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mission_progress()) {
    mission_progress_ = new ::mavsdk::rpc::mission_raw::MissionProgress(*from.mission_progress_);
  } else {
    mission_progress_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.MissionProgressResponse)
}

void MissionProgressResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MissionProgressResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  mission_progress_ = nullptr;
}

MissionProgressResponse::~MissionProgressResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.MissionProgressResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MissionProgressResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mission_progress_;
}

void MissionProgressResponse::ArenaDtor(void* object) {
  MissionProgressResponse* _this = reinterpret_cast< MissionProgressResponse* >(object);
  (void)_this;
}
void MissionProgressResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MissionProgressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MissionProgressResponse& MissionProgressResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MissionProgressResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void MissionProgressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.MissionProgressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mission_progress_ != nullptr) {
    delete mission_progress_;
  }
  mission_progress_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MissionProgressResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_raw.MissionProgress mission_progress = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mission_progress(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MissionProgressResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.MissionProgressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionProgress mission_progress = 1;
  if (this->has_mission_progress()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mission_progress(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.MissionProgressResponse)
  return target;
}

size_t MissionProgressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.MissionProgressResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionProgress mission_progress = 1;
  if (this->has_mission_progress()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mission_progress_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MissionProgressResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.MissionProgressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MissionProgressResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MissionProgressResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.MissionProgressResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.MissionProgressResponse)
    MergeFrom(*source);
  }
}

void MissionProgressResponse::MergeFrom(const MissionProgressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.MissionProgressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mission_progress()) {
    _internal_mutable_mission_progress()->::mavsdk::rpc::mission_raw::MissionProgress::MergeFrom(from._internal_mission_progress());
  }
}

void MissionProgressResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.MissionProgressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MissionProgressResponse::CopyFrom(const MissionProgressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.MissionProgressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissionProgressResponse::IsInitialized() const {
  return true;
}

void MissionProgressResponse::InternalSwap(MissionProgressResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_progress_, other->mission_progress_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MissionProgressResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubscribeMissionChangedRequest::InitAsDefaultInstance() {
}
class SubscribeMissionChangedRequest::_Internal {
 public:
};

SubscribeMissionChangedRequest::SubscribeMissionChangedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
}
SubscribeMissionChangedRequest::SubscribeMissionChangedRequest(const SubscribeMissionChangedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
}

void SubscribeMissionChangedRequest::SharedCtor() {
}

SubscribeMissionChangedRequest::~SubscribeMissionChangedRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubscribeMissionChangedRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SubscribeMissionChangedRequest::ArenaDtor(void* object) {
  SubscribeMissionChangedRequest* _this = reinterpret_cast< SubscribeMissionChangedRequest* >(object);
  (void)_this;
}
void SubscribeMissionChangedRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubscribeMissionChangedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscribeMissionChangedRequest& SubscribeMissionChangedRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscribeMissionChangedRequest_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void SubscribeMissionChangedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubscribeMissionChangedRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscribeMissionChangedRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
  return target;
}

size_t SubscribeMissionChangedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeMissionChangedRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeMissionChangedRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscribeMissionChangedRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
    MergeFrom(*source);
  }
}

void SubscribeMissionChangedRequest::MergeFrom(const SubscribeMissionChangedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SubscribeMissionChangedRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeMissionChangedRequest::CopyFrom(const SubscribeMissionChangedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.SubscribeMissionChangedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeMissionChangedRequest::IsInitialized() const {
  return true;
}

void SubscribeMissionChangedRequest::InternalSwap(SubscribeMissionChangedRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscribeMissionChangedRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MissionChangedResponse::InitAsDefaultInstance() {
}
class MissionChangedResponse::_Internal {
 public:
};

MissionChangedResponse::MissionChangedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.MissionChangedResponse)
}
MissionChangedResponse::MissionChangedResponse(const MissionChangedResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mission_changed_ = from.mission_changed_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.MissionChangedResponse)
}

void MissionChangedResponse::SharedCtor() {
  mission_changed_ = false;
}

MissionChangedResponse::~MissionChangedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.MissionChangedResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MissionChangedResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MissionChangedResponse::ArenaDtor(void* object) {
  MissionChangedResponse* _this = reinterpret_cast< MissionChangedResponse* >(object);
  (void)_this;
}
void MissionChangedResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MissionChangedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MissionChangedResponse& MissionChangedResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MissionChangedResponse_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void MissionChangedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.MissionChangedResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mission_changed_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MissionChangedResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool mission_changed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          mission_changed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MissionChangedResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.MissionChangedResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool mission_changed = 1;
  if (this->mission_changed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_mission_changed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.MissionChangedResponse)
  return target;
}

size_t MissionChangedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.MissionChangedResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool mission_changed = 1;
  if (this->mission_changed() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MissionChangedResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.MissionChangedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MissionChangedResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MissionChangedResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.MissionChangedResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.MissionChangedResponse)
    MergeFrom(*source);
  }
}

void MissionChangedResponse::MergeFrom(const MissionChangedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.MissionChangedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mission_changed() != 0) {
    _internal_set_mission_changed(from._internal_mission_changed());
  }
}

void MissionChangedResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.MissionChangedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MissionChangedResponse::CopyFrom(const MissionChangedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.MissionChangedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissionChangedResponse::IsInitialized() const {
  return true;
}

void MissionChangedResponse::InternalSwap(MissionChangedResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mission_changed_, other->mission_changed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MissionChangedResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MissionProgress::InitAsDefaultInstance() {
}
class MissionProgress::_Internal {
 public:
};

MissionProgress::MissionProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.MissionProgress)
}
MissionProgress::MissionProgress(const MissionProgress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&current_, &from.current_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_) -
    reinterpret_cast<char*>(&current_)) + sizeof(total_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.MissionProgress)
}

void MissionProgress::SharedCtor() {
  ::memset(&current_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&current_)) + sizeof(total_));
}

MissionProgress::~MissionProgress() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.MissionProgress)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MissionProgress::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MissionProgress::ArenaDtor(void* object) {
  MissionProgress* _this = reinterpret_cast< MissionProgress* >(object);
  (void)_this;
}
void MissionProgress::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MissionProgress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MissionProgress& MissionProgress::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MissionProgress_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void MissionProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.MissionProgress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&current_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&current_)) + sizeof(total_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MissionProgress::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 current = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          current_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 total = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MissionProgress::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.MissionProgress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 current = 1;
  if (this->current() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_current(), target);
  }

  // int32 total = 2;
  if (this->total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_total(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.MissionProgress)
  return target;
}

size_t MissionProgress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.MissionProgress)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 current = 1;
  if (this->current() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_current());
  }

  // int32 total = 2;
  if (this->total() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MissionProgress::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.MissionProgress)
  GOOGLE_DCHECK_NE(&from, this);
  const MissionProgress* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MissionProgress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.MissionProgress)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.MissionProgress)
    MergeFrom(*source);
  }
}

void MissionProgress::MergeFrom(const MissionProgress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.MissionProgress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current() != 0) {
    _internal_set_current(from._internal_current());
  }
  if (from.total() != 0) {
    _internal_set_total(from._internal_total());
  }
}

void MissionProgress::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.MissionProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MissionProgress::CopyFrom(const MissionProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.MissionProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissionProgress::IsInitialized() const {
  return true;
}

void MissionProgress::InternalSwap(MissionProgress* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MissionProgress, total_)
      + sizeof(MissionProgress::total_)
      - PROTOBUF_FIELD_OFFSET(MissionProgress, current_)>(
          reinterpret_cast<char*>(&current_),
          reinterpret_cast<char*>(&other->current_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MissionProgress::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MissionItem::InitAsDefaultInstance() {
}
class MissionItem::_Internal {
 public:
};

MissionItem::MissionItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.MissionItem)
}
MissionItem::MissionItem(const MissionItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&mission_type_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(mission_type_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.MissionItem)
}

void MissionItem::SharedCtor() {
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mission_type_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(mission_type_));
}

MissionItem::~MissionItem() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.MissionItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MissionItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MissionItem::ArenaDtor(void* object) {
  MissionItem* _this = reinterpret_cast< MissionItem* >(object);
  (void)_this;
}
void MissionItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MissionItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MissionItem& MissionItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MissionItem_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void MissionItem::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.MissionItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mission_type_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(mission_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MissionItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          seq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 frame = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          frame_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 command = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          command_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 current = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          current_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 autocontinue = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          autocontinue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float param1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          param1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float param2 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          param2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float param3 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          param3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float param4 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          param4_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 x = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 y = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float z = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint32 mission_type = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          mission_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MissionItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.MissionItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seq = 1;
  if (this->seq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_seq(), target);
  }

  // uint32 frame = 2;
  if (this->frame() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_frame(), target);
  }

  // uint32 command = 3;
  if (this->command() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_command(), target);
  }

  // uint32 current = 4;
  if (this->current() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_current(), target);
  }

  // uint32 autocontinue = 5;
  if (this->autocontinue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_autocontinue(), target);
  }

  // float param1 = 6;
  if (!(this->param1() <= 0 && this->param1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_param1(), target);
  }

  // float param2 = 7;
  if (!(this->param2() <= 0 && this->param2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_param2(), target);
  }

  // float param3 = 8;
  if (!(this->param3() <= 0 && this->param3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_param3(), target);
  }

  // float param4 = 9;
  if (!(this->param4() <= 0 && this->param4() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->_internal_param4(), target);
  }

  // int32 x = 10;
  if (this->x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_x(), target);
  }

  // int32 y = 11;
  if (this->y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_y(), target);
  }

  // float z = 12;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->_internal_z(), target);
  }

  // uint32 mission_type = 13;
  if (this->mission_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_mission_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.MissionItem)
  return target;
}

size_t MissionItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.MissionItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 seq = 1;
  if (this->seq() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_seq());
  }

  // uint32 frame = 2;
  if (this->frame() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_frame());
  }

  // uint32 command = 3;
  if (this->command() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_command());
  }

  // uint32 current = 4;
  if (this->current() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_current());
  }

  // uint32 autocontinue = 5;
  if (this->autocontinue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_autocontinue());
  }

  // float param1 = 6;
  if (!(this->param1() <= 0 && this->param1() >= 0)) {
    total_size += 1 + 4;
  }

  // float param2 = 7;
  if (!(this->param2() <= 0 && this->param2() >= 0)) {
    total_size += 1 + 4;
  }

  // float param3 = 8;
  if (!(this->param3() <= 0 && this->param3() >= 0)) {
    total_size += 1 + 4;
  }

  // float param4 = 9;
  if (!(this->param4() <= 0 && this->param4() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 x = 10;
  if (this->x() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_x());
  }

  // int32 y = 11;
  if (this->y() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_y());
  }

  // float z = 12;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  // uint32 mission_type = 13;
  if (this->mission_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mission_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MissionItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.MissionItem)
  GOOGLE_DCHECK_NE(&from, this);
  const MissionItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MissionItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.MissionItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.MissionItem)
    MergeFrom(*source);
  }
}

void MissionItem::MergeFrom(const MissionItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.MissionItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seq() != 0) {
    _internal_set_seq(from._internal_seq());
  }
  if (from.frame() != 0) {
    _internal_set_frame(from._internal_frame());
  }
  if (from.command() != 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.current() != 0) {
    _internal_set_current(from._internal_current());
  }
  if (from.autocontinue() != 0) {
    _internal_set_autocontinue(from._internal_autocontinue());
  }
  if (!(from.param1() <= 0 && from.param1() >= 0)) {
    _internal_set_param1(from._internal_param1());
  }
  if (!(from.param2() <= 0 && from.param2() >= 0)) {
    _internal_set_param2(from._internal_param2());
  }
  if (!(from.param3() <= 0 && from.param3() >= 0)) {
    _internal_set_param3(from._internal_param3());
  }
  if (!(from.param4() <= 0 && from.param4() >= 0)) {
    _internal_set_param4(from._internal_param4());
  }
  if (from.x() != 0) {
    _internal_set_x(from._internal_x());
  }
  if (from.y() != 0) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
  if (from.mission_type() != 0) {
    _internal_set_mission_type(from._internal_mission_type());
  }
}

void MissionItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.MissionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MissionItem::CopyFrom(const MissionItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.MissionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissionItem::IsInitialized() const {
  return true;
}

void MissionItem::InternalSwap(MissionItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MissionItem, mission_type_)
      + sizeof(MissionItem::mission_type_)
      - PROTOBUF_FIELD_OFFSET(MissionItem, seq_)>(
          reinterpret_cast<char*>(&seq_),
          reinterpret_cast<char*>(&other->seq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MissionItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MissionRawResult::InitAsDefaultInstance() {
}
class MissionRawResult::_Internal {
 public:
};

MissionRawResult::MissionRawResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.mission_raw.MissionRawResult)
}
MissionRawResult::MissionRawResult(const MissionRawResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result_str().empty()) {
    result_str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result_str(),
      GetArena());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.mission_raw.MissionRawResult)
}

void MissionRawResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto.base);
  result_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

MissionRawResult::~MissionRawResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.mission_raw.MissionRawResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MissionRawResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_str_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MissionRawResult::ArenaDtor(void* object) {
  MissionRawResult* _this = reinterpret_cast< MissionRawResult* >(object);
  (void)_this;
}
void MissionRawResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MissionRawResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MissionRawResult& MissionRawResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MissionRawResult_mission_5fraw_2fmission_5fraw_2eproto.base);
  return *internal_default_instance();
}


void MissionRawResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.mission_raw.MissionRawResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_str_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MissionRawResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.mission_raw.MissionRawResult.Result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::mavsdk::rpc::mission_raw::MissionRawResult_Result>(val));
        } else goto handle_unusual;
        continue;
      // string result_str = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_result_str();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mavsdk.rpc.mission_raw.MissionRawResult.result_str"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MissionRawResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.mission_raw.MissionRawResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.mission_raw.MissionRawResult.Result result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (this->result_str().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result_str().data(), static_cast<int>(this->_internal_result_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.mission_raw.MissionRawResult.result_str");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_result_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.mission_raw.MissionRawResult)
  return target;
}

size_t MissionRawResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.mission_raw.MissionRawResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (this->result_str().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result_str());
  }

  // .mavsdk.rpc.mission_raw.MissionRawResult.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MissionRawResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.mission_raw.MissionRawResult)
  GOOGLE_DCHECK_NE(&from, this);
  const MissionRawResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MissionRawResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.mission_raw.MissionRawResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.mission_raw.MissionRawResult)
    MergeFrom(*source);
  }
}

void MissionRawResult::MergeFrom(const MissionRawResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.mission_raw.MissionRawResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result_str().size() > 0) {
    _internal_set_result_str(from._internal_result_str());
  }
  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void MissionRawResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.mission_raw.MissionRawResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MissionRawResult::CopyFrom(const MissionRawResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.mission_raw.MissionRawResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissionRawResult::IsInitialized() const {
  return true;
}

void MissionRawResult::InternalSwap(MissionRawResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_str_.Swap(&other->result_str_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MissionRawResult::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mission_raw
}  // namespace rpc
}  // namespace mavsdk
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::UploadMissionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::UploadMissionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::UploadMissionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::UploadMissionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::UploadMissionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::UploadMissionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::CancelMissionUploadRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::CancelMissionUploadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::CancelMissionUploadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::CancelMissionUploadResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::CancelMissionUploadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::CancelMissionUploadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::DownloadMissionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::DownloadMissionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::DownloadMissionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::DownloadMissionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::DownloadMissionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::DownloadMissionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::CancelMissionDownloadRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::CancelMissionDownloadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::CancelMissionDownloadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::CancelMissionDownloadResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::CancelMissionDownloadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::CancelMissionDownloadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::StartMissionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::StartMissionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::StartMissionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::StartMissionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::StartMissionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::StartMissionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::PauseMissionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::PauseMissionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::PauseMissionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::PauseMissionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::PauseMissionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::PauseMissionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::ClearMissionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::ClearMissionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::ClearMissionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::ClearMissionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::ClearMissionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::ClearMissionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::SetCurrentMissionItemRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::SetCurrentMissionItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::SetCurrentMissionItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::SetCurrentMissionItemResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::SetCurrentMissionItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::SetCurrentMissionItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::SubscribeMissionProgressRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::SubscribeMissionProgressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::SubscribeMissionProgressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::MissionProgressResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::MissionProgressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::MissionProgressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::SubscribeMissionChangedRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::SubscribeMissionChangedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::SubscribeMissionChangedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::MissionChangedResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::MissionChangedResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::MissionChangedResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::MissionProgress* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::MissionProgress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::MissionProgress >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::MissionItem* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::MissionItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::MissionItem >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::mission_raw::MissionRawResult* Arena::CreateMaybeMessage< ::mavsdk::rpc::mission_raw::MissionRawResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mavsdk::rpc::mission_raw::MissionRawResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
